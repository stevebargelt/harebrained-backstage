name: $(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger:
  branches:
    include:
      - main
  paths:
    exclude:
      - acr
variables:
  - group: variables-acr-prod
  - group: secrets-acr
  - name: DOCKER_BUILDKIT
    value: 1
  - name: tag
    value: '$(Build.BuildId)'
  - name: containerRegistry
    value: '$(acrName).azurecr.io'
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/packages/backend/Dockerfile'

stages:
  - stage: build_and_test
    displayName: 'Build and Test'
    jobs:
      - job: build_backstage_backend
        displayName: 'Build Backend'
        pool:
          vmImage: ubuntu-latest
        steps:
          - task: Bash@3
            displayName: Build sources (yarn)
            inputs:
              targetType: 'inline'
              script: |
                yarn install --frozen-lockfile
                yarn tsc
                yarn build
          - task: Docker@2
            displayName: Build and push an image to container registry
            inputs:
              command: buildAndPush
              buildContext: '$(Build.SourcesDirectory)'
              repository: '$(repositoryBackend)'
              dockerfile: $(dockerfilePath)
              containerRegistry: $(acrConnection)
              tags: |
                $(tag)
                latest
      - job: Publish_Pattern
        displayName: Publish Pattern
        pool:
          vmImage: windows-latest
        dependsOn: build_backstage_backend
        steps:
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              SourceFolder: '$(Build.SourcesDirectory)/aci'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/aci'
              CleanTargetFolder: true
              OverWrite: true
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: aci'
            inputs:
              artifactName: 'aci'
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/aci'
  - stage: deploy_to_prod
    displayName: 'Deploy Backend To Production'
    jobs:
      - deployment: deploy_to_prod
        displayName: 'Deploy to Prod'
        pool:
          vmImage: ubuntu-latest
          timeoutInMinutes: 120
        variables:
          - group: variables-acr-prod
        environment: 'prod'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzurePowerShell@5
                  displayName: 'Get workload subscription Id'
                  inputs:
                    azureSubscription: 'Visual Studio Enterprise'
                    ScriptType: InlineScript
                    Inline: |
                      $subId = (get-azcontext).subscription.id
                      Write-Output ("##vso[task.setvariable variable=workloadSubId]$subId")
                    azurePowerShellVersion: LatestVersion
                - task: AzureResourceManagerTemplateDeployment@3
                  displayName: 'Template Deployment - Prod'
                  inputs:
                    deploymentScope: Resource Group
                    azureResourceManagerConnection: 'Visual Studio Enterprise'
                    subscriptionId: '$(workloadSubId)'
                    resourceGroupName: '$(resourceGroup)'
                    location: '$(location)'
                    csmFile: $(Agent.BuildDirectory)/aci/azuredeploy.json
                    csmParametersFile: $(Agent.BuildDirectory)/aci/azuredeploy.parameters.json
                    overrideParameters: '-name $(aciName) -image "$(acrName).azurecr.io/$(imageName):$(tag)" -location $(location) -imageUserName $(acrUserName) -imagePassword $(acrPassword) -imageRegistryLoginServer "$(acr).azurecr.io"'
                    deploymentMode: Incremental
